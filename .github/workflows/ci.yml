name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Compile TypeScript
      run: npm run compile
    
    - name: Run tests
      run: npm test
      continue-on-error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension
      run: npm run compile
    
    - name: Package extension
      run: |
        npm install -g vsce
        vsce package
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: add-tool-mcp-${{ github.sha }}
        path: '*.vsix'
        retention-days: 30

  publish:
    if: github.event_name == 'release'
    needs: [test, build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension
      run: npm run compile
    
    - name: Publish to VS Code Marketplace
      run: |
        npm install -g vsce
        vsce publish -p ${{ secrets.VSCE_PAT }}
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
    
    - name: Create GitHub Release Asset
      run: |
        vsce package
        gh release upload ${{ github.event.release.tag_name }} *.vsix
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        npm audit fix --dry-run
      continue-on-error: true
    
    - name: Check for vulnerabilities
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    
    - name: Install and audit
      run: |
        npm ci
        npm audit --audit-level=high
      continue-on-error: true